# DO NOT MAKE CHANGES TO THIS FILE.  Instead, modify
# ci/settings.yml and override what needs overridden.
# This uses spruce, so you have some options there.
---
meta:
  name:     (( param "Library name" ))
  pipeline: (( grab meta.name ))
  target:   "am"

  git:
    email:  "<>"
    name:   "CI Bot"

  go:
    module: (( concat "github.com/" meta.github.owner "/" meta.github.repo ))

  vendor:
    image: am-registry:5000/anothermemory/go-vendor
    tag:
      develop:  "develop"
      master:   "master"

  github:
    uri:          (( concat "git@github.com:" meta.github.owner "/" meta.github.repo ))
    owner:        "anothermemory"
    repo:         (( param "Please specify the name of the Github repository" ))
    private_key:  ((git_private_key))
    access_token: ((git_access_token))

resources:
- name: git-develop
  type: git
  check_every: 15s
  source:
    uri: (( grab meta.github.uri ))
    branch: develop
    private_key: (( grab meta.github.private_key ))

- name: git-master
  type: git
  check_every: 15s
  source:
    uri: (( grab meta.github.uri ))
    branch: master
    private_key: (( grab meta.github.private_key ))

- name: docker-image-vendor-develop
  type: docker-image
  check_every: 15s
  source:
    repository: (( grab meta.vendor.image ))
    tag: (( grab meta.vendor.tag.develop ))
    insecure_registries: [ "am-registry:5000" ]

- name: docker-image-vendor-master
  type: docker-image
  check_every: 15s
  source:
    repository: (( grab meta.vendor.image ))
    tag: (( grab meta.vendor.tag.master ))
    insecure_registries: [ "am-registry:5000" ]

jobs:
- name: "test-develop"
  serial: true
  plan:
  - aggregate:
    - { get: docker-image-vendor-develop, trigger: true }
    - { get: git-develop, trigger: true }
  - aggregate:
    - task: build
      image: docker-image-vendor-develop
      file: git-develop/ci/tasks/build.yml
      input_mapping: {code: git-develop}
      params:
        MODULE: (( grab meta.go.module ))
    - task: lint
      image: docker-image-vendor-develop
      file: git-develop/ci/tasks/lint.yml
      input_mapping: {code: git-develop}
      params:
        MODULE: (( grab meta.go.module ))
    - task: test
      image: docker-image-vendor-develop
      file: git-develop/ci/tasks/test.yml
      input_mapping: {code: git-develop}
      params:
        MODULE: (( grab meta.go.module ))
- name: "test-master"
  serial: true
  plan:
  - aggregate:
    - { get: docker-image-vendor-master, trigger: true }
    - { get: git-master, trigger: true }
  - aggregate:
    - task: build
      image: docker-image-vendor-master
      file: git-master/ci/tasks/build.yml
      input_mapping: {code: git-master}
      params:
        MODULE: (( grab meta.go.module ))
    - task: lint
      image: docker-image-vendor-master
      file: git-master/ci/tasks/lint.yml
      input_mapping: {code: git-master}
      params:
        MODULE: (( grab meta.go.module ))
    - task: test
      image: docker-image-vendor-master
      file: git-master/ci/tasks/test.yml
      input_mapping: {code: git-master}
      params:
        MODULE: (( grab meta.go.module ))